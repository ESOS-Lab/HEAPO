Totals GV:95
ST:242
HP:0
Unknown:23
Total Memory Access Inst:360


BB:1
	ST  Inst:   store i32 0, i32* %retval Source:   %retval = alloca i32, align 4
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !97 Source:   %i = alloca i32, align 4
BB:2
	ST  Inst:   %2 = load i32* %i, align 4, !dbg !99 Source:   %i = alloca i32, align 4
	ST  Inst:   %3 = load i8** %arrayidx, align 8, !dbg !99 Source:   %find_strings = alloca [1333 x i8*], align 16
BB:3
	ST  Inst:   %4 = load i32* %i, align 4, !dbg !102 Source:   %i = alloca i32, align 4
	ST  Inst:   %5 = load i8** %arrayidx2, align 8, !dbg !102 Source:   %find_strings = alloca [1333 x i8*], align 16
	ST  Inst:   %6 = load i32* %i, align 4, !dbg !104 Source:   %i = alloca i32, align 4
	ST  Inst:   %7 = load i8** %arrayidx4, align 8, !dbg !104 Source:   %search_strings = alloca [1332 x i8*], align 16
	ST  Inst:   store i8* %8, i8** %here, align 8, !dbg !104 Source:   %here = alloca i8*, align 8
	ST  Inst:   %9 = load i32* %i, align 4, !dbg !105 Source:   %i = alloca i32, align 4
	ST  Inst:   %10 = load i8** %arrayidx6, align 8, !dbg !105 Source:   %find_strings = alloca [1333 x i8*], align 16
	ST  Inst:   %11 = load i8** %here, align 8, !dbg !105 Source:   %here = alloca i8*, align 8
	ST  Inst:   %12 = load i32* %i, align 4, !dbg !105 Source:   %i = alloca i32, align 4
	ST  Inst:   %13 = load i8** %arrayidx9, align 8, !dbg !105 Source:   %search_strings = alloca [1332 x i8*], align 16
	ST  Inst:   %14 = load i8** %here, align 8, !dbg !106 Source:   %here = alloca i8*, align 8
BB:4
	ST  Inst:   %15 = load i8** %here, align 8, !dbg !108 Source:   %here = alloca i8*, align 8
BB:5
BB:6
	ST  Inst:   %16 = load i32* %i, align 4, !dbg !111 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc, i32* %i, align 4, !dbg !111 Source:   %i = alloca i32, align 4
BB:7
BB:8
	GV  Inst:   %0 = load i8** @pat2, align 8, !dbg !81 Source: @pat2 = internal global i8* null, align 8
BB:9
	ST  Inst:   store i8* %pattern, i8** %pattern.addr, align 8 Source:   %pattern.addr = alloca i8*, align 8
	ST  Inst:   %0 = load i8** %pattern.addr, align 8, !dbg !87 Source:   %pattern.addr = alloca i8*, align 8
	GV  Inst:   store i8* %0, i8** @pat5, align 8, !dbg !87 Source: @pat5 = internal global i8* null, align 8
	ST  Inst:   %1 = load i8** %pattern.addr, align 8, !dbg !88 Source:   %pattern.addr = alloca i8*, align 8
	GV  Inst:   store i32 %conv, i32* @patlen6, align 4, !dbg !88 Source: @patlen6 = internal global i32 0, align 4
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !89 Source:   %i = alloca i32, align 4
BB:10
	ST  Inst:   %2 = load i32* %i, align 4, !dbg !91 Source:   %i = alloca i32, align 4
BB:11
	GV  Inst:   %3 = load i32* @patlen6, align 4, !dbg !94 Source: @patlen6 = internal global i32 0, align 4
	ST  Inst:   %4 = load i32* %i, align 4, !dbg !94 Source:   %i = alloca i32, align 4
	GV  Inst:   store i32 %3, i32* %arrayidx, align 4, !dbg !94 Source: @skip7 = internal global [256 x i32] zeroinitializer, align 16
BB:12
	ST  Inst:   %5 = load i32* %i, align 4, !dbg !95 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc, i32* %i, align 4, !dbg !95 Source:   %i = alloca i32, align 4
BB:13
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !96 Source:   %i = alloca i32, align 4
BB:14
	ST  Inst:   %6 = load i32* %i, align 4, !dbg !98 Source:   %i = alloca i32, align 4
	GV  Inst:   %7 = load i32* @patlen6, align 4, !dbg !98 Source: @patlen6 = internal global i32 0, align 4
BB:15
	GV  Inst:   %8 = load i32* @patlen6, align 4, !dbg !101 Source: @patlen6 = internal global i32 0, align 4
	ST  Inst:   %9 = load i32* %i, align 4, !dbg !101 Source:   %i = alloca i32, align 4
	ST  Inst:   %10 = load i32* %i, align 4, !dbg !101 Source:   %i = alloca i32, align 4
	GV  Inst:   %11 = load i8** @pat5, align 8, !dbg !101 Source: @pat5 = internal global i8* null, align 8
	--  Inst:   %12 = load i8* %arrayidx8, align 1, !dbg !101 Source: --
	GV  Inst:   store i32 %sub6, i32* %arrayidx10, align 4, !dbg !101 Source: @skip7 = internal global [256 x i32] zeroinitializer, align 16
BB:16
	ST  Inst:   %13 = load i32* %i, align 4, !dbg !102 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc12, i32* %i, align 4, !dbg !102 Source:   %i = alloca i32, align 4
BB:17
	GV  Inst:   %14 = load i32* @patlen6, align 4, !dbg !103 Source: @patlen6 = internal global i32 0, align 4
	GV  Inst:   %15 = load i8** @pat5, align 8, !dbg !103 Source: @pat5 = internal global i8* null, align 8
	--  Inst:   %16 = load i8* %arrayidx16, align 1, !dbg !103 Source: --
	ST  Inst:   store i32 %conv17, i32* %lastpatchar, align 4, !dbg !103 Source:   %lastpatchar = alloca i32, align 4
	ST  Inst:   %17 = load i32* %lastpatchar, align 4, !dbg !104 Source:   %lastpatchar = alloca i32, align 4
	GV  Inst:   store i32 32767, i32* %arrayidx19, align 4, !dbg !104 Source: @skip7 = internal global [256 x i32] zeroinitializer, align 16
	GV  Inst:   %18 = load i32* @patlen6, align 4, !dbg !105 Source: @patlen6 = internal global i32 0, align 4
	GV  Inst:   store i32 %18, i32* @skip28, align 4, !dbg !105 Source: @skip28 = internal global i32 0, align 4
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !106 Source:   %i = alloca i32, align 4
BB:18
	ST  Inst:   %19 = load i32* %i, align 4, !dbg !108 Source:   %i = alloca i32, align 4
	GV  Inst:   %20 = load i32* @patlen6, align 4, !dbg !108 Source: @patlen6 = internal global i32 0, align 4
BB:19
	ST  Inst:   %21 = load i32* %i, align 4, !dbg !111 Source:   %i = alloca i32, align 4
	GV  Inst:   %22 = load i8** @pat5, align 8, !dbg !111 Source: @pat5 = internal global i8* null, align 8
	--  Inst:   %23 = load i8* %arrayidx26, align 1, !dbg !111 Source: --
	ST  Inst:   %24 = load i32* %lastpatchar, align 4, !dbg !111 Source:   %lastpatchar = alloca i32, align 4
BB:20
	GV  Inst:   %25 = load i32* @patlen6, align 4, !dbg !114 Source: @patlen6 = internal global i32 0, align 4
	ST  Inst:   %26 = load i32* %i, align 4, !dbg !114 Source:   %i = alloca i32, align 4
	GV  Inst:   store i32 %sub31, i32* @skip28, align 4, !dbg !114 Source: @skip28 = internal global i32 0, align 4
BB:21
BB:22
	ST  Inst:   %27 = load i32* %i, align 4, !dbg !116 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc33, i32* %i, align 4, !dbg !116 Source:   %i = alloca i32, align 4
BB:23
BB:24
	ST  Inst:   store i8* %string, i8** %string.addr, align 8 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   store i32 %stringlen, i32* %stringlen.addr, align 4 Source:   %stringlen.addr = alloca i32, align 4
	GV  Inst:   %0 = load i32* @patlen6, align 4, !dbg !91 Source: @patlen6 = internal global i32 0, align 4
	ST  Inst:   %1 = load i32* %stringlen.addr, align 4, !dbg !91 Source:   %stringlen.addr = alloca i32, align 4
	ST  Inst:   store i32 %sub1, i32* %i, align 4, !dbg !91 Source:   %i = alloca i32, align 4
	ST  Inst:   %2 = load i32* %i, align 4, !dbg !92 Source:   %i = alloca i32, align 4
BB:25
	ST  Inst:   store i8* null, i8** %retval, !dbg !94 Source:   %retval = alloca i8*, align 8
BB:26
	ST  Inst:   %3 = load i32* %stringlen.addr, align 4, !dbg !95 Source:   %stringlen.addr = alloca i32, align 4
	ST  Inst:   %4 = load i8** %string.addr, align 8, !dbg !95 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   store i8* %add.ptr, i8** %string.addr, align 8, !dbg !95 Source:   %string.addr = alloca i8*, align 8
BB:27
BB:28
	ST  Inst:   %5 = load i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
	ST  Inst:   %6 = load i8** %string.addr, align 8, !dbg !100 Source:   %string.addr = alloca i8*, align 8
	--  Inst:   %7 = load i8* %arrayidx, align 1, !dbg !100 Source: --
	GV  Inst:   %8 = load i32* %arrayidx3, align 4, !dbg !100 Source: @skip7 = internal global [256 x i32] zeroinitializer, align 16
	ST  Inst:   %9 = load i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %add, i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
BB:29
BB:30
	ST  Inst:   %10 = load i32* %i, align 4, !dbg !105 Source:   %i = alloca i32, align 4
	ST  Inst:   %11 = load i32* %stringlen.addr, align 4, !dbg !105 Source:   %stringlen.addr = alloca i32, align 4
BB:31
	ST  Inst:   store i8* null, i8** %retval, !dbg !107 Source:   %retval = alloca i8*, align 8
BB:32
	ST  Inst:   %12 = load i32* %i, align 4, !dbg !108 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %sub9, i32* %i, align 4, !dbg !108 Source:   %i = alloca i32, align 4
	GV  Inst:   %13 = load i32* @patlen6, align 4, !dbg !109 Source: @patlen6 = internal global i32 0, align 4
	ST  Inst:   store i32 %sub10, i32* %j, align 4, !dbg !109 Source:   %j = alloca i32, align 4
	ST  Inst:   %14 = load i8** %string.addr, align 8, !dbg !110 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   %15 = load i32* %i, align 4, !dbg !110 Source:   %i = alloca i32, align 4
	ST  Inst:   %16 = load i32* %j, align 4, !dbg !110 Source:   %j = alloca i32, align 4
	ST  Inst:   store i8* %add.ptr13, i8** %s, align 8, !dbg !110 Source:   %s = alloca i8*, align 8
BB:33
	ST  Inst:   %17 = load i32* %j, align 4, !dbg !112 Source:   %j = alloca i32, align 4
	ST  Inst:   store i32 %dec, i32* %j, align 4, !dbg !112 Source:   %j = alloca i32, align 4
BB:34
	ST  Inst:   %18 = load i32* %j, align 4, !dbg !115 Source:   %j = alloca i32, align 4
	ST  Inst:   %19 = load i8** %s, align 8, !dbg !115 Source:   %s = alloca i8*, align 8
	--  Inst:   %20 = load i8* %arrayidx17, align 1, !dbg !115 Source: --
	ST  Inst:   %21 = load i32* %j, align 4, !dbg !115 Source:   %j = alloca i32, align 4
	GV  Inst:   %22 = load i8** @pat5, align 8, !dbg !115 Source: @pat5 = internal global i8* null, align 8
	--  Inst:   %23 = load i8* %arrayidx19, align 1, !dbg !115 Source: --
BB:35
BB:36
BB:37
	ST  Inst:   %25 = load i32* %j, align 4, !dbg !121 Source:   %j = alloca i32, align 4
BB:38
	ST  Inst:   %26 = load i8** %s, align 8, !dbg !123 Source:   %s = alloca i8*, align 8
	ST  Inst:   store i8* %26, i8** %retval, !dbg !123 Source:   %retval = alloca i8*, align 8
BB:39
	GV  Inst:   %27 = load i32* @skip28, align 4, !dbg !124 Source: @skip28 = internal global i32 0, align 4
	ST  Inst:   %28 = load i32* %i, align 4, !dbg !124 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %add29, i32* %i, align 4, !dbg !124 Source:   %i = alloca i32, align 4
BB:40
	ST  Inst:   store i8* null, i8** %retval, !dbg !126 Source:   %retval = alloca i8*, align 8
BB:41
BB:42
	ST  Inst:   %29 = load i8** %retval, !dbg !128 Source:   %retval = alloca i8*, align 8
BB:43
	ST  Inst:   store i8* %pattern, i8** %pattern.addr, align 8 Source:   %pattern.addr = alloca i8*, align 8
	ST  Inst:   %0 = load i8** %pattern.addr, align 8, !dbg !87 Source:   %pattern.addr = alloca i8*, align 8
	GV  Inst:   store i8* %0, i8** @pat, align 8, !dbg !87 Source: @pat = internal global i8* null, align 8
	ST  Inst:   %1 = load i8** %pattern.addr, align 8, !dbg !88 Source:   %pattern.addr = alloca i8*, align 8
	GV  Inst:   store i32 %conv, i32* @patlen, align 4, !dbg !88 Source: @patlen = internal global i32 0, align 4
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !89 Source:   %i = alloca i32, align 4
BB:44
	ST  Inst:   %2 = load i32* %i, align 4, !dbg !91 Source:   %i = alloca i32, align 4
BB:45
	GV  Inst:   %3 = load i32* @patlen, align 4, !dbg !94 Source: @patlen = internal global i32 0, align 4
	ST  Inst:   %4 = load i32* %i, align 4, !dbg !94 Source:   %i = alloca i32, align 4
	GV  Inst:   store i32 %3, i32* %arrayidx, align 4, !dbg !94 Source: @skip = internal global [256 x i32] zeroinitializer, align 16
	GV  Inst:   %5 = load i32* @patlen, align 4, !dbg !96 Source: @patlen = internal global i32 0, align 4
	ST  Inst:   store i32 %sub, i32* %j, align 4, !dbg !96 Source:   %j = alloca i32, align 4
BB:46
	ST  Inst:   %6 = load i32* %j, align 4, !dbg !98 Source:   %j = alloca i32, align 4
BB:47
	ST  Inst:   %7 = load i32* %i, align 4, !dbg !101 Source:   %i = alloca i32, align 4
	GV  Inst:   %8 = load i8* %arrayidx8, align 1, !dbg !101 Source: @lowervec = global [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7Fcueaaaaceeeiiiaae\91\92ooouuyou\9B\9C\9D\9E\9Faiounn\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
	ST  Inst:   %9 = load i32* %j, align 4, !dbg !101 Source:   %j = alloca i32, align 4
	GV  Inst:   %10 = load i8** @pat, align 8, !dbg !101 Source: @pat = internal global i8* null, align 8
	--  Inst:   %11 = load i8* %arrayidx11, align 1, !dbg !101 Source: --
	GV  Inst:   %12 = load i8* %arrayidx13, align 1, !dbg !101 Source: @lowervec = global [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7Fcueaaaaceeeiiiaae\91\92ooouuyou\9B\9C\9D\9E\9Faiounn\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
BB:48
BB:49
BB:50
	ST  Inst:   %13 = load i32* %j, align 4, !dbg !106 Source:   %j = alloca i32, align 4
	ST  Inst:   store i32 %dec, i32* %j, align 4, !dbg !106 Source:   %j = alloca i32, align 4
BB:51
	ST  Inst:   %14 = load i32* %j, align 4, !dbg !107 Source:   %j = alloca i32, align 4
BB:52
	GV  Inst:   %15 = load i32* @patlen, align 4, !dbg !109 Source: @patlen = internal global i32 0, align 4
	ST  Inst:   %16 = load i32* %j, align 4, !dbg !109 Source:   %j = alloca i32, align 4
	ST  Inst:   %17 = load i32* %i, align 4, !dbg !109 Source:   %i = alloca i32, align 4
	GV  Inst:   store i32 %sub21, i32* %arrayidx23, align 4, !dbg !109 Source: @skip = internal global [256 x i32] zeroinitializer, align 16
BB:53
	ST  Inst:   %18 = load i32* %j, align 4, !dbg !110 Source:   %j = alloca i32, align 4
	GV  Inst:   %19 = load i32* @patlen, align 4, !dbg !110 Source: @patlen = internal global i32 0, align 4
BB:54
	ST  Inst:   %20 = load i32* %i, align 4, !dbg !112 Source:   %i = alloca i32, align 4
	GV  Inst:   store i32 32767, i32* %arrayidx30, align 4, !dbg !112 Source: @skip = internal global [256 x i32] zeroinitializer, align 16
BB:55
BB:56
	ST  Inst:   %21 = load i32* %i, align 4, !dbg !114 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc, i32* %i, align 4, !dbg !114 Source:   %i = alloca i32, align 4
BB:57
	GV  Inst:   %22 = load i32* @patlen, align 4, !dbg !115 Source: @patlen = internal global i32 0, align 4
	GV  Inst:   store i32 %22, i32* @skip2, align 4, !dbg !115 Source: @skip2 = internal global i32 0, align 4
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !116 Source:   %i = alloca i32, align 4
BB:58
	ST  Inst:   %23 = load i32* %i, align 4, !dbg !118 Source:   %i = alloca i32, align 4
	GV  Inst:   %24 = load i32* @patlen, align 4, !dbg !118 Source: @patlen = internal global i32 0, align 4
BB:59
	ST  Inst:   %25 = load i32* %i, align 4, !dbg !121 Source:   %i = alloca i32, align 4
	GV  Inst:   %26 = load i8** @pat, align 8, !dbg !121 Source: @pat = internal global i8* null, align 8
	--  Inst:   %27 = load i8* %arrayidx40, align 1, !dbg !121 Source: --
	GV  Inst:   %28 = load i8* %arrayidx42, align 1, !dbg !121 Source: @lowervec = global [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7Fcueaaaaceeeiiiaae\91\92ooouuyou\9B\9C\9D\9E\9Faiounn\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
	GV  Inst:   %29 = load i32* @patlen, align 4, !dbg !121 Source: @patlen = internal global i32 0, align 4
	GV  Inst:   %30 = load i8** @pat, align 8, !dbg !121 Source: @pat = internal global i8* null, align 8
	--  Inst:   %31 = load i8* %arrayidx46, align 1, !dbg !121 Source: --
	GV  Inst:   %32 = load i8* %arrayidx48, align 1, !dbg !121 Source: @lowervec = global [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7Fcueaaaaceeeiiiaae\91\92ooouuyou\9B\9C\9D\9E\9Faiounn\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
BB:60
	GV  Inst:   %33 = load i32* @patlen, align 4, !dbg !124 Source: @patlen = internal global i32 0, align 4
	ST  Inst:   %34 = load i32* %i, align 4, !dbg !124 Source:   %i = alloca i32, align 4
	GV  Inst:   store i32 %sub54, i32* @skip2, align 4, !dbg !124 Source: @skip2 = internal global i32 0, align 4
BB:61
BB:62
	ST  Inst:   %35 = load i32* %i, align 4, !dbg !126 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc57, i32* %i, align 4, !dbg !126 Source:   %i = alloca i32, align 4
BB:63
BB:64
	ST  Inst:   store i8* %string, i8** %string.addr, align 8 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   store i32 %stringlen, i32* %stringlen.addr, align 4 Source:   %stringlen.addr = alloca i32, align 4
	GV  Inst:   %0 = load i32* @patlen, align 4, !dbg !91 Source: @patlen = internal global i32 0, align 4
	ST  Inst:   %1 = load i32* %stringlen.addr, align 4, !dbg !91 Source:   %stringlen.addr = alloca i32, align 4
	ST  Inst:   store i32 %sub1, i32* %i, align 4, !dbg !91 Source:   %i = alloca i32, align 4
	ST  Inst:   %2 = load i32* %i, align 4, !dbg !92 Source:   %i = alloca i32, align 4
BB:65
	ST  Inst:   store i8* null, i8** %retval, !dbg !94 Source:   %retval = alloca i8*, align 8
BB:66
	ST  Inst:   %3 = load i32* %stringlen.addr, align 4, !dbg !95 Source:   %stringlen.addr = alloca i32, align 4
	ST  Inst:   %4 = load i8** %string.addr, align 8, !dbg !95 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   store i8* %add.ptr, i8** %string.addr, align 8, !dbg !95 Source:   %string.addr = alloca i8*, align 8
BB:67
BB:68
	ST  Inst:   %5 = load i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
	ST  Inst:   %6 = load i8** %string.addr, align 8, !dbg !100 Source:   %string.addr = alloca i8*, align 8
	--  Inst:   %7 = load i8* %arrayidx, align 1, !dbg !100 Source: --
	GV  Inst:   %8 = load i32* %arrayidx3, align 4, !dbg !100 Source: @skip = internal global [256 x i32] zeroinitializer, align 16
	ST  Inst:   %9 = load i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %add, i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
BB:69
BB:70
	ST  Inst:   %10 = load i32* %i, align 4, !dbg !105 Source:   %i = alloca i32, align 4
	ST  Inst:   %11 = load i32* %stringlen.addr, align 4, !dbg !105 Source:   %stringlen.addr = alloca i32, align 4
BB:71
	ST  Inst:   store i8* null, i8** %retval, !dbg !107 Source:   %retval = alloca i8*, align 8
BB:72
	ST  Inst:   %12 = load i32* %i, align 4, !dbg !108 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %sub9, i32* %i, align 4, !dbg !108 Source:   %i = alloca i32, align 4
	GV  Inst:   %13 = load i32* @patlen, align 4, !dbg !109 Source: @patlen = internal global i32 0, align 4
	ST  Inst:   store i32 %sub10, i32* %j, align 4, !dbg !109 Source:   %j = alloca i32, align 4
	ST  Inst:   %14 = load i8** %string.addr, align 8, !dbg !110 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   %15 = load i32* %i, align 4, !dbg !110 Source:   %i = alloca i32, align 4
	ST  Inst:   %16 = load i32* %j, align 4, !dbg !110 Source:   %j = alloca i32, align 4
	ST  Inst:   store i8* %add.ptr13, i8** %s, align 8, !dbg !110 Source:   %s = alloca i8*, align 8
BB:73
	ST  Inst:   %17 = load i32* %j, align 4, !dbg !112 Source:   %j = alloca i32, align 4
	ST  Inst:   store i32 %dec, i32* %j, align 4, !dbg !112 Source:   %j = alloca i32, align 4
BB:74
	ST  Inst:   %18 = load i32* %j, align 4, !dbg !115 Source:   %j = alloca i32, align 4
	ST  Inst:   %19 = load i8** %s, align 8, !dbg !115 Source:   %s = alloca i8*, align 8
	--  Inst:   %20 = load i8* %arrayidx17, align 1, !dbg !115 Source: --
	GV  Inst:   %21 = load i8* %arrayidx19, align 1, !dbg !115 Source: @lowervec = global [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7Fcueaaaaceeeiiiaae\91\92ooouuyou\9B\9C\9D\9E\9Faiounn\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
	ST  Inst:   %22 = load i32* %j, align 4, !dbg !115 Source:   %j = alloca i32, align 4
	GV  Inst:   %23 = load i8** @pat, align 8, !dbg !115 Source: @pat = internal global i8* null, align 8
	--  Inst:   %24 = load i8* %arrayidx21, align 1, !dbg !115 Source: --
	GV  Inst:   %25 = load i8* %arrayidx23, align 1, !dbg !115 Source: @lowervec = global [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7Fcueaaaaceeeiiiaae\91\92ooouuyou\9B\9C\9D\9E\9Faiounn\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
BB:75
BB:76
BB:77
	ST  Inst:   %27 = load i32* %j, align 4, !dbg !121 Source:   %j = alloca i32, align 4
BB:78
	ST  Inst:   %28 = load i8** %s, align 8, !dbg !123 Source:   %s = alloca i8*, align 8
	ST  Inst:   store i8* %28, i8** %retval, !dbg !123 Source:   %retval = alloca i8*, align 8
BB:79
	GV  Inst:   %29 = load i32* @skip2, align 4, !dbg !124 Source: @skip2 = internal global i32 0, align 4
	ST  Inst:   %30 = load i32* %i, align 4, !dbg !124 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %add33, i32* %i, align 4, !dbg !124 Source:   %i = alloca i32, align 4
BB:80
	ST  Inst:   store i8* null, i8** %retval, !dbg !126 Source:   %retval = alloca i8*, align 8
BB:81
BB:82
	ST  Inst:   %31 = load i8** %retval, !dbg !128 Source:   %retval = alloca i8*, align 8
BB:83
	ST  Inst:   store i8* %pattern, i8** %pattern.addr, align 8 Source:   %pattern.addr = alloca i8*, align 8
	ST  Inst:   %0 = load i8** %pattern.addr, align 8, !dbg !87 Source:   %pattern.addr = alloca i8*, align 8
	GV  Inst:   store i32 %conv, i32* @patlen1, align 4, !dbg !87 Source: @patlen1 = internal global i32 0, align 4
	GV  Inst:   %1 = load i8** @pat2, align 8, !dbg !88 Source: @pat2 = internal global i8* null, align 8
	GV  Inst:   %2 = load i32* @patlen1, align 4, !dbg !88 Source: @patlen1 = internal global i32 0, align 4
	GV  Inst:   store i8* %call2, i8** @pat2, align 8, !dbg !88 Source: @pat2 = internal global i8* null, align 8
	GV  Inst:   %3 = load i8** @pat2, align 8, !dbg !89 Source: @pat2 = internal global i8* null, align 8
BB:84
BB:85
BB:86
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !93 Source:   %i = alloca i32, align 4
BB:87
	ST  Inst:   %4 = load i32* %i, align 4, !dbg !95 Source:   %i = alloca i32, align 4
	GV  Inst:   %5 = load i32* @patlen1, align 4, !dbg !95 Source: @patlen1 = internal global i32 0, align 4
BB:88
	ST  Inst:   %6 = load i32* %i, align 4, !dbg !98 Source:   %i = alloca i32, align 4
	ST  Inst:   %7 = load i8** %pattern.addr, align 8, !dbg !98 Source:   %pattern.addr = alloca i8*, align 8
	--  Inst:   %8 = load i8* %arrayidx, align 1, !dbg !98 Source: --
	ST  Inst:   %9 = load i32* %i, align 4, !dbg !98 Source:   %i = alloca i32, align 4
	GV  Inst:   %10 = load i8** @pat2, align 8, !dbg !98 Source: @pat2 = internal global i8* null, align 8
	--  Inst:   store i8 %conv7, i8* %arrayidx9, align 1, !dbg !98 Source: --
BB:89
	ST  Inst:   %11 = load i32* %i, align 4, !dbg !99 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc, i32* %i, align 4, !dbg !99 Source:   %i = alloca i32, align 4
BB:90
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
BB:91
	ST  Inst:   %12 = load i32* %i, align 4, !dbg !102 Source:   %i = alloca i32, align 4
BB:92
	GV  Inst:   %13 = load i32* @patlen1, align 4, !dbg !105 Source: @patlen1 = internal global i32 0, align 4
	ST  Inst:   %14 = load i32* %i, align 4, !dbg !105 Source:   %i = alloca i32, align 4
	GV  Inst:   store i32 %13, i32* %arrayidx15, align 4, !dbg !105 Source: @skip3 = internal global [256 x i32] zeroinitializer, align 16
BB:93
	ST  Inst:   %15 = load i32* %i, align 4, !dbg !106 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc17, i32* %i, align 4, !dbg !106 Source:   %i = alloca i32, align 4
BB:94
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !107 Source:   %i = alloca i32, align 4
BB:95
	ST  Inst:   %16 = load i32* %i, align 4, !dbg !109 Source:   %i = alloca i32, align 4
	GV  Inst:   %17 = load i32* @patlen1, align 4, !dbg !109 Source: @patlen1 = internal global i32 0, align 4
BB:96
	GV  Inst:   %18 = load i32* @patlen1, align 4, !dbg !112 Source: @patlen1 = internal global i32 0, align 4
	ST  Inst:   %19 = load i32* %i, align 4, !dbg !112 Source:   %i = alloca i32, align 4
	ST  Inst:   %20 = load i32* %i, align 4, !dbg !112 Source:   %i = alloca i32, align 4
	GV  Inst:   %21 = load i8** @pat2, align 8, !dbg !112 Source: @pat2 = internal global i8* null, align 8
	--  Inst:   %22 = load i8* %arrayidx26, align 1, !dbg !112 Source: --
	GV  Inst:   store i32 %sub24, i32* %arrayidx28, align 4, !dbg !112 Source: @skip3 = internal global [256 x i32] zeroinitializer, align 16
	GV  Inst:   %23 = load i32* @patlen1, align 4, !dbg !114 Source: @patlen1 = internal global i32 0, align 4
	ST  Inst:   %24 = load i32* %i, align 4, !dbg !114 Source:   %i = alloca i32, align 4
	ST  Inst:   %25 = load i32* %i, align 4, !dbg !115 Source:   %i = alloca i32, align 4
	GV  Inst:   %26 = load i8** @pat2, align 8, !dbg !115 Source: @pat2 = internal global i8* null, align 8
	--  Inst:   %27 = load i8* %arrayidx32, align 1, !dbg !115 Source: --
	GV  Inst:   store i32 %sub30, i32* %arrayidx36, align 4, !dbg !115 Source: @skip3 = internal global [256 x i32] zeroinitializer, align 16
BB:97
	ST  Inst:   %28 = load i32* %i, align 4, !dbg !117 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc38, i32* %i, align 4, !dbg !117 Source:   %i = alloca i32, align 4
BB:98
	GV  Inst:   %29 = load i32* @patlen1, align 4, !dbg !118 Source: @patlen1 = internal global i32 0, align 4
	GV  Inst:   %30 = load i8** @pat2, align 8, !dbg !118 Source: @pat2 = internal global i8* null, align 8
	--  Inst:   %31 = load i8* %arrayidx42, align 1, !dbg !118 Source: --
	ST  Inst:   store i32 %conv43, i32* %lastpatchar, align 4, !dbg !118 Source:   %lastpatchar = alloca i32, align 4
	ST  Inst:   %32 = load i32* %lastpatchar, align 4, !dbg !119 Source:   %lastpatchar = alloca i32, align 4
	GV  Inst:   store i32 32767, i32* %arrayidx45, align 4, !dbg !119 Source: @skip3 = internal global [256 x i32] zeroinitializer, align 16
	ST  Inst:   %33 = load i32* %lastpatchar, align 4, !dbg !120 Source:   %lastpatchar = alloca i32, align 4
	GV  Inst:   store i32 32767, i32* %arrayidx48, align 4, !dbg !120 Source: @skip3 = internal global [256 x i32] zeroinitializer, align 16
	GV  Inst:   %34 = load i32* @patlen1, align 4, !dbg !121 Source: @patlen1 = internal global i32 0, align 4
	GV  Inst:   store i32 %34, i32* @skip24, align 4, !dbg !121 Source: @skip24 = internal global i32 0, align 4
	ST  Inst:   store i32 0, i32* %i, align 4, !dbg !122 Source:   %i = alloca i32, align 4
BB:99
	ST  Inst:   %35 = load i32* %i, align 4, !dbg !124 Source:   %i = alloca i32, align 4
	GV  Inst:   %36 = load i32* @patlen1, align 4, !dbg !124 Source: @patlen1 = internal global i32 0, align 4
BB:100
	ST  Inst:   %37 = load i32* %i, align 4, !dbg !127 Source:   %i = alloca i32, align 4
	GV  Inst:   %38 = load i8** @pat2, align 8, !dbg !127 Source: @pat2 = internal global i8* null, align 8
	--  Inst:   %39 = load i8* %arrayidx55, align 1, !dbg !127 Source: --
	ST  Inst:   %40 = load i32* %lastpatchar, align 4, !dbg !127 Source:   %lastpatchar = alloca i32, align 4
BB:101
	GV  Inst:   %41 = load i32* @patlen1, align 4, !dbg !130 Source: @patlen1 = internal global i32 0, align 4
	ST  Inst:   %42 = load i32* %i, align 4, !dbg !130 Source:   %i = alloca i32, align 4
	GV  Inst:   store i32 %sub61, i32* @skip24, align 4, !dbg !130 Source: @skip24 = internal global i32 0, align 4
BB:102
BB:103
	ST  Inst:   %43 = load i32* %i, align 4, !dbg !132 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %inc64, i32* %i, align 4, !dbg !132 Source:   %i = alloca i32, align 4
BB:104
BB:105
	ST  Inst:   store i8* %string, i8** %string.addr, align 8 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   store i32 %stringlen, i32* %stringlen.addr, align 4 Source:   %stringlen.addr = alloca i32, align 4
	GV  Inst:   %0 = load i32* @patlen1, align 4, !dbg !91 Source: @patlen1 = internal global i32 0, align 4
	ST  Inst:   %1 = load i32* %stringlen.addr, align 4, !dbg !91 Source:   %stringlen.addr = alloca i32, align 4
	ST  Inst:   store i32 %sub1, i32* %i, align 4, !dbg !91 Source:   %i = alloca i32, align 4
	ST  Inst:   %2 = load i32* %i, align 4, !dbg !92 Source:   %i = alloca i32, align 4
BB:106
	ST  Inst:   store i8* null, i8** %retval, !dbg !94 Source:   %retval = alloca i8*, align 8
BB:107
	ST  Inst:   %3 = load i32* %stringlen.addr, align 4, !dbg !95 Source:   %stringlen.addr = alloca i32, align 4
	ST  Inst:   %4 = load i8** %string.addr, align 8, !dbg !95 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   store i8* %add.ptr, i8** %string.addr, align 8, !dbg !95 Source:   %string.addr = alloca i8*, align 8
BB:108
BB:109
	ST  Inst:   %5 = load i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
	ST  Inst:   %6 = load i8** %string.addr, align 8, !dbg !100 Source:   %string.addr = alloca i8*, align 8
	--  Inst:   %7 = load i8* %arrayidx, align 1, !dbg !100 Source: --
	GV  Inst:   %8 = load i32* %arrayidx3, align 4, !dbg !100 Source: @skip3 = internal global [256 x i32] zeroinitializer, align 16
	ST  Inst:   %9 = load i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %add, i32* %i, align 4, !dbg !100 Source:   %i = alloca i32, align 4
BB:110
BB:111
	ST  Inst:   %10 = load i32* %i, align 4, !dbg !105 Source:   %i = alloca i32, align 4
	ST  Inst:   %11 = load i32* %stringlen.addr, align 4, !dbg !105 Source:   %stringlen.addr = alloca i32, align 4
BB:112
	ST  Inst:   store i8* null, i8** %retval, !dbg !107 Source:   %retval = alloca i8*, align 8
BB:113
	ST  Inst:   %12 = load i32* %i, align 4, !dbg !108 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %sub9, i32* %i, align 4, !dbg !108 Source:   %i = alloca i32, align 4
	GV  Inst:   %13 = load i32* @patlen1, align 4, !dbg !109 Source: @patlen1 = internal global i32 0, align 4
	ST  Inst:   store i32 %sub10, i32* %j, align 4, !dbg !109 Source:   %j = alloca i32, align 4
	ST  Inst:   %14 = load i8** %string.addr, align 8, !dbg !110 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   %15 = load i32* %i, align 4, !dbg !110 Source:   %i = alloca i32, align 4
	ST  Inst:   %16 = load i32* %j, align 4, !dbg !110 Source:   %j = alloca i32, align 4
	ST  Inst:   store i8* %add.ptr13, i8** %s, align 8, !dbg !110 Source:   %s = alloca i8*, align 8
BB:114
	ST  Inst:   %17 = load i32* %j, align 4, !dbg !112 Source:   %j = alloca i32, align 4
	ST  Inst:   store i32 %dec, i32* %j, align 4, !dbg !112 Source:   %j = alloca i32, align 4
BB:115
	ST  Inst:   %18 = load i32* %j, align 4, !dbg !115 Source:   %j = alloca i32, align 4
	ST  Inst:   %19 = load i8** %s, align 8, !dbg !115 Source:   %s = alloca i8*, align 8
	--  Inst:   %20 = load i8* %arrayidx17, align 1, !dbg !115 Source: --
	ST  Inst:   %21 = load i32* %j, align 4, !dbg !115 Source:   %j = alloca i32, align 4
	GV  Inst:   %22 = load i8** @pat2, align 8, !dbg !115 Source: @pat2 = internal global i8* null, align 8
	--  Inst:   %23 = load i8* %arrayidx19, align 1, !dbg !115 Source: --
BB:116
BB:117
BB:118
	ST  Inst:   %25 = load i32* %j, align 4, !dbg !121 Source:   %j = alloca i32, align 4
BB:119
	ST  Inst:   %26 = load i8** %s, align 8, !dbg !123 Source:   %s = alloca i8*, align 8
	ST  Inst:   store i8* %26, i8** %retval, !dbg !123 Source:   %retval = alloca i8*, align 8
BB:120
	GV  Inst:   %27 = load i32* @skip24, align 4, !dbg !124 Source: @skip24 = internal global i32 0, align 4
	ST  Inst:   %28 = load i32* %i, align 4, !dbg !124 Source:   %i = alloca i32, align 4
	ST  Inst:   store i32 %add29, i32* %i, align 4, !dbg !124 Source:   %i = alloca i32, align 4
BB:121
	ST  Inst:   store i8* null, i8** %retval, !dbg !126 Source:   %retval = alloca i8*, align 8
BB:122
BB:123
	ST  Inst:   %29 = load i8** %retval, !dbg !128 Source:   %retval = alloca i8*, align 8
BB:124
	ST  Inst:   store i8* %string, i8** %string.addr, align 8 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   %0 = load i8** %string.addr, align 8, !dbg !85 Source:   %string.addr = alloca i8*, align 8
	GV  Inst:   store i64 %call, i64* @len, align 8, !dbg !85 Source: @len = internal global i64 0, align 8
	ST  Inst:   store i64 0, i64* %i, align 8, !dbg !86 Source:   %i = alloca i64, align 8
BB:125
	ST  Inst:   %1 = load i64* %i, align 8, !dbg !88 Source:   %i = alloca i64, align 8
BB:126
	GV  Inst:   %2 = load i64* @len, align 8, !dbg !91 Source: @len = internal global i64 0, align 8
	ST  Inst:   %3 = load i64* %i, align 8, !dbg !91 Source:   %i = alloca i64, align 8
	GV  Inst:   store i64 %2, i64* %arrayidx, align 8, !dbg !91 Source: @table = internal global [256 x i64] zeroinitializer, align 16
BB:127
	ST  Inst:   %4 = load i64* %i, align 8, !dbg !92 Source:   %i = alloca i64, align 8
	ST  Inst:   store i64 %inc, i64* %i, align 8, !dbg !92 Source:   %i = alloca i64, align 8
BB:128
	ST  Inst:   store i64 0, i64* %i, align 8, !dbg !93 Source:   %i = alloca i64, align 8
BB:129
	ST  Inst:   %5 = load i64* %i, align 8, !dbg !95 Source:   %i = alloca i64, align 8
	GV  Inst:   %6 = load i64* @len, align 8, !dbg !95 Source: @len = internal global i64 0, align 8
BB:130
	GV  Inst:   %7 = load i64* @len, align 8, !dbg !98 Source: @len = internal global i64 0, align 8
	ST  Inst:   %8 = load i64* %i, align 8, !dbg !98 Source:   %i = alloca i64, align 8
	ST  Inst:   %9 = load i64* %i, align 8, !dbg !98 Source:   %i = alloca i64, align 8
	ST  Inst:   %10 = load i8** %string.addr, align 8, !dbg !98 Source:   %string.addr = alloca i8*, align 8
	--  Inst:   %11 = load i8* %arrayidx5, align 1, !dbg !98 Source: --
	GV  Inst:   store i64 %sub4, i64* %arrayidx6, align 8, !dbg !98 Source: @table = internal global [256 x i64] zeroinitializer, align 16
BB:131
	ST  Inst:   %12 = load i64* %i, align 8, !dbg !99 Source:   %i = alloca i64, align 8
	ST  Inst:   store i64 %inc8, i64* %i, align 8, !dbg !99 Source:   %i = alloca i64, align 8
BB:132
	ST  Inst:   %13 = load i8** %string.addr, align 8, !dbg !100 Source:   %string.addr = alloca i8*, align 8
	GV  Inst:   store i8* %13, i8** @findme, align 8, !dbg !100 Source: @findme = internal global i8* null, align 8
BB:133
	ST  Inst:   store i8* %string, i8** %string.addr, align 8 Source:   %string.addr = alloca i8*, align 8
	GV  Inst:   %0 = load i64* @len, align 8, !dbg !87 Source: @len = internal global i64 0, align 8
	ST  Inst:   store i64 %sub, i64* %pos, align 8, !dbg !87 Source:   %pos = alloca i64, align 8
	ST  Inst:   %1 = load i8** %string.addr, align 8, !dbg !92 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   store i64 %call, i64* %limit, align 8, !dbg !92 Source:   %limit = alloca i64, align 8
BB:134
	ST  Inst:   %2 = load i64* %pos, align 8, !dbg !94 Source:   %pos = alloca i64, align 8
	ST  Inst:   %3 = load i64* %limit, align 8, !dbg !94 Source:   %limit = alloca i64, align 8
BB:135
BB:136
	ST  Inst:   %4 = load i64* %pos, align 8, !dbg !98 Source:   %pos = alloca i64, align 8
	ST  Inst:   %5 = load i64* %limit, align 8, !dbg !98 Source:   %limit = alloca i64, align 8
BB:137
	ST  Inst:   %6 = load i64* %pos, align 8, !dbg !100 Source:   %pos = alloca i64, align 8
	ST  Inst:   %7 = load i8** %string.addr, align 8, !dbg !100 Source:   %string.addr = alloca i8*, align 8
	--  Inst:   %8 = load i8* %arrayidx, align 1, !dbg !100 Source: --
	GV  Inst:   %9 = load i64* %arrayidx3, align 8, !dbg !100 Source: @table = internal global [256 x i64] zeroinitializer, align 16
	ST  Inst:   store i64 %9, i64* %shift, align 8, !dbg !100 Source:   %shift = alloca i64, align 8
BB:138
BB:139
	ST  Inst:   %11 = load i64* %shift, align 8, !dbg !104 Source:   %shift = alloca i64, align 8
	ST  Inst:   %12 = load i64* %pos, align 8, !dbg !104 Source:   %pos = alloca i64, align 8
	ST  Inst:   store i64 %add, i64* %pos, align 8, !dbg !104 Source:   %pos = alloca i64, align 8
BB:140
	ST  Inst:   %13 = load i64* %shift, align 8, !dbg !107 Source:   %shift = alloca i64, align 8
BB:141
	GV  Inst:   %14 = load i8** @findme, align 8, !dbg !109 Source: @findme = internal global i8* null, align 8
	ST  Inst:   %15 = load i64* %pos, align 8, !dbg !109 Source:   %pos = alloca i64, align 8
	GV  Inst:   %16 = load i64* @len, align 8, !dbg !109 Source: @len = internal global i64 0, align 8
	ST  Inst:   %17 = load i8** %string.addr, align 8, !dbg !109 Source:   %string.addr = alloca i8*, align 8
	ST  Inst:   store i8* %arrayidx9, i8** %here, align 8, !dbg !109 Source:   %here = alloca i8*, align 8
	GV  Inst:   %18 = load i64* @len, align 8, !dbg !109 Source: @len = internal global i64 0, align 8
BB:142
	ST  Inst:   %19 = load i8** %here, align 8, !dbg !112 Source:   %here = alloca i8*, align 8
	ST  Inst:   store i8* %19, i8** %retval, !dbg !112 Source:   %retval = alloca i8*, align 8
BB:143
	ST  Inst:   %20 = load i64* %pos, align 8, !dbg !114 Source:   %pos = alloca i64, align 8
	ST  Inst:   store i64 %inc, i64* %pos, align 8, !dbg !114 Source:   %pos = alloca i64, align 8
BB:144
BB:145
BB:146
	ST  Inst:   store i8* null, i8** %retval, !dbg !117 Source:   %retval = alloca i8*, align 8
BB:147
	ST  Inst:   %21 = load i8** %retval, !dbg !118 Source:   %retval = alloca i8*, align 8